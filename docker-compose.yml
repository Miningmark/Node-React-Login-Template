version: "3.9"

services:
  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    depends_on:
      - backend
    env_file:
      - "./frontend/.env"
    expose:
      - "80"
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: backend
    restart: always
    depends_on:
      - default-database
    env_file:
      - ./backend/.env
    expose:
      - "4000"
    networks:
      - app-network

  default-database:
    image: mariadb:latest
    container_name: default-database
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DEFAULT_DATABASE_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DEFAULT_DATABASE_NAME}
      - MYSQL_USER=${DEFAULT_DATABASE_USER}
      - MYSQL_PASSWORD=${DEFAULT_DATABASE_PASSWORD}
    volumes:
      - default-database-data:/var/lib/mysql
    networks:
      - app-network

  default-phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: default-phpmyadmin
    restart: no
    environment:
      - PMA_HOST=default-database
      - PMA_ABSOLUTE_URI=https://${DOMAIN}/phpmyadmin/
    depends_on:
      - default-database
    expose:
      - "80"
    networks:
      - app-network

  default-s3:
     image: minio/minio
     container_name: default-s3
     command: server /data --console-address ":9001"
     environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio1234
     volumes:
      - default-s3-data:/data
     networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: always
    environment:
      - DOMAIN=${DOMAIN}
    depends_on:
      - frontend
      - backend
      - default-database
      - default-s3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/templates/default.conf.template
      - ./certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: always
    depends_on:
      - nginx
    volumes:
      - ./certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done'"
    networks:
      - app-network

volumes:
  default-database-data:
  default-s3-data:

networks:
  app-network:
    driver: bridge